apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  namespace: tekton
  name: build-and-push-image
spec:
  workspaces:
  - name: source
  - name: dockerconfig
    mountPath: /root/.docker
  steps:
    - name: build-and-push
      image: quay.io/buildah/upstream:latest
      securityContext:
        runAsUser: 0
      # runAsNonRoot: true
        privileged: true
      # allowPrivilegeEscalation: false
      #   capabilities:
      #     drop:
      #     - ALL
      #   seccompProfile:
      #     type: RuntimeDefault
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        
        execPath=$(pwd)
        aspnetCorePath="$execPath/aspnet-core"

        declare -A projectsToBuild

        projectsToBuild=(
            ["TCloudUptime.Migrator_folder"]="$aspnetCorePath/src/TCloudUptime.Migrator"
            ["TCloudUptime.Migrator_imageName"]="southamerica-east1-docker.pkg.dev/t-cloud-watch/tcloud-watch/tcloud-uptime-migrator"
            ["TCloudUptime.Web.Host_folder"]="$aspnetCorePath/src/TCloudUptime.Web.Host"
            ["TCloudUptime.Web.Host_imageName"]="southamerica-east1-docker.pkg.dev/t-cloud-watch/tcloud-watch/tcloud-uptime-webapi"
            ["TCloudUptime.QueueWorker_folder"]="$aspnetCorePath/src/TCloudUptime.QueueWorker"
            ["TCloudUptime.QueueWorker_imageName"]="southamerica-east1-docker.pkg.dev/t-cloud-watch/tcloud-watch/tcloud-uptime-queueworker"
            ["TCloudUptime.AlertsManager_folder"]="$aspnetCorePath/src/TCloudUptime.AlertsManager"
            ["TCloudUptime.AlertsManager_imageName"]="southamerica-east1-docker.pkg.dev/t-cloud-watch/tcloud-watch/tcloud-uptime-alertsmanager"
            ["TCloudUptime.MonitorSchedulerWorker_folder"]="$aspnetCorePath/src/TCloudUptime.MonitorSchedulerWorker"
            ["TCloudUptime.MonitorSchedulerWorker_imageName"]="southamerica-east1-docker.pkg.dev/t-cloud-watch/tcloud-watch/tcloud-uptime-monitorschedulerworker"
        )

        createdbyLabel="com.microsoft.created-by=visual-studio"

        for project in TCloudUptime.Migrator TCloudUptime.Web.Host TCloudUptime.QueueWorker TCloudUptime.AlertsManager TCloudUptime.MonitorSchedulerWorker; do
            productLabel="com.microsoft.visual-studio.project-name=${project}"
            projectFolder="${projectsToBuild[${project}_folder]}"
            projectDockerFile="${projectFolder}/Dockerfile"
            projectImageName="${projectsToBuild[${project}_imageName]}"

            # imageSearch=$(docker image ls "$projectImageName" --format "table {{.Repository}}")
            imageSearch="southamerica-east1-docker.pkg.dev/t-cloud-watch/tcloud-watch/"

            if [[ $imageSearch =~ $projectImageName ]]; then
                # docker rmi "$projectImageName" -f
                buildah rmi -f "$projectImageName" 
            fi
            # buildah build -f "$projectDockerFile" --force-rm -t "$projectImageName" --label "$createdbyLabel" --label "$productLabel" "$projectFolder"
            buildah bud -f "$projectDockerFile" -t "$projectImageName" --label "$createdbyLabel" --label "$productLabel" "$aspnetCorePath"
        done